# ===============================
# = Application specific
# ===============================
# IDENTITY (ContextIdApplicationContextInitializer)
spring.application.name=MySpringBootApp
app.description=${spring.application.name} is a Spring Boot application
# SPRING CORE
# Whether to skip search of BeanInfo classes.
spring.beaninfo.ignore=false
# BANNER
# Banner file encoding.
spring.banner.charset=UTF-8
# Banner text resource location.
spring.banner.location=classpath:banner.txt
# Banner image file location (jpg or png can also be used).
spring.banner.image.location=classpath:banner.gif
# Width of the banner image in chars.
spring.banner.image.width=76
# Height of the banner image in chars (default based on image height).
spring.banner.image.height=76
# Left hand image margin in chars.
spring.banner.image.margin=2
# Whether images should be inverted for dark terminal themes.
spring.banner.image.invert=false
#Rather than hard coding those values, fetch from pom.xml
info.app.encoding=@project.build.sourceEncoding@
info.app.java.source=@java.version@
info.app.java.target=@java.version@
# ===============================
# = LOGGING
# ===============================
debug=false
logging.level.root=INFO
# ===============================
# = EMBEDDED SERVER CONFIGURATION (ServerProperties)
# ===============================
server.compression.min-response-size=1
# Network address to which the server should bind.
server.address=localhost
server.compression.enabled=true
# Time that connectors wait for another HTTP request before closing the connection.
# When not set, the connector's container-specific default is used.
# Use a value of -1 to indicate no (that is, an infinite) timeout.
server.connection-timeout=5s
# Server HTTP port.
server.port=8080
# Path of the main dispatcher servlet.
#server.servlet.path=/
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/sakila?autoReconnect=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=
spring.datasource.continue-on-error=false
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.name="THIS IS SPRING DATA SOURCE"
#connection pool
spring.datasource.hikari.connection-test-query=SELECT 1;
spring.datasource.hikari.connection-timeout=300
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.transaction-isolation=TRANSACTION_REPEATABLE_READ
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/sakila?autoReconnect=true&characterEncoding=utf-8
spring.datasource.hikari.username=root
spring.datasource.hikari.password=
spring.datasource.hikari.pool-name="MY APPLICATIONS HIKARI CONNECTION POOL"
#mongo
# specify either uri or host,port, db, credentials
spring.data.mongodb.host=127.0.0.1
spring.data.mongodb.port=27017
spring.data.mongodb.database=lms
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.uri=mongodb://lms:lms@127.0.0.1:27017/lms
spring.data.mongodb.username=lms
spring.data.mongodb.password=lms
spring.data.mongodb.repositories.type=auto
spring.session.store-type=none

# ---------------------------------
spring.liquibase.url=jdbc:mysql://localhost:3306/sakila?autoReconnect=true&characterEncoding=utf-8
spring.liquibase.change-log=classpath*:
spring.liquibase.enabled=false

# ----------------------------------
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=MYSQL
# Naming strategy
spring.jpa.properties.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.format_sql=true

spring.cache.type=none
spring.cache.jcache.provider=org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
spring.jpa.properties.hibernate.cache.provider=org.ehcache.jsr107.EhcacheCachingProvider
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
spring.cache.cache-names=cache1
#spring.cache.caffeine.spec=maximumSize=500,expireAfterAccess=600s

#logging for hibernate
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.stat=debug
logging.level.org.hibernate.type=trace


# ===============================
# = Spring security configs
# ===============================
spring.security.user.name=root
spring.security.user.password=root

# ===============================
# = User Defined Configurations
# ===============================
